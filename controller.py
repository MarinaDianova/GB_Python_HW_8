'''модуль controller - функция start с циклом управления'''


import view, model


# ↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓ ФУНКЦИЯ "Start" С ЦИКЛОМ УПРАВЛЕНИЯ ЛОГИКОЙ ↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓

def start():

    view.clear_console() # Очищает консоль
    view.greetings() # Приветствие
    
    
    while True:

        view.formated_prnt('Нажмите Enter или любой символ для перехода в меню...') # функция форматированнога принта      ┐
        if goto_menu_request(): # Запрос ввода Enter или любого символа для возврата в меню                                ├ блок очистки экрана и вывода меню
            view.clear_console() # очищает консоль                                                                         ┘


        view.menu() # Вывод списка меню
        view.formated_prnt('Введите нужный пункт: ') 
        
        answer = input() # запрос ввода нужного пункта меню

        if answer == '1':
            view.clear_console()
            view.show_contact_lst(model.contact_lst()) # Вывод списка контактов


        elif answer == '2':
            while conflim_dialogue('Продолжить процедуру добавления? Да(y) / Нет(n).\nВведите ваш ответ: '): # диалог для подтверждения
                view.clear_console()
                view.formated_prnt(view.italic_txt('*** Формат ввода: "Имя_контакта ; Контактный_номер" ***')) # подсказака курсивом как надо вводить
                add_line = input_add_check('\nВвод: ') # запрос ввода строки с контактом, с проверкой на корректность
                model.add_contact(add_line) # Записать строку с контактом в файл
                

        elif answer == '3':
            while conflim_dialogue('Продолжить процедуру удаления? Да(y) / Нет(n).\nВведите ваш ответ: '):
                while len(model.contact_lst()) > 0: # если список контактов не пустой то продолжаем иначе выводим что он пуст
                    view.clear_console()
                    view.show_contact_lst(model.contact_lst())
                    del_line = input_del_check('Введите строку для удаления: ') # запрос номера строки для удаления, с проверкой
                    model.del_contact(del_line) # Удалить строку с контактом в файле
                else:
                    view.formated_prnt(view.italic_txt('*** Список контактов пуст ***\n'))

                
        elif answer == '4':
            view.clear_console()
            view.bye() # функция вывода текста с прощанием
            break # прерывание для выхода из программы


        else:
            input_error() # Если ошибка

# ↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑














# ↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓ ЛОКАЛЬНЫЕ ФУНКЦИИ ДЛЯ ЭТОГО ФАЙЛА ↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓


# _______________________________ДИАЛОГИ И ЗАПРОСЫ______________________________

def conflim_dialogue(text): # если введено Да(y), то возващает True. Если Нет(n) - False. Иначе обращается к функции вывода ошибки
    view.formated_prnt(text)
    dialogue = input().lower()
    if dialogue == "нет" or dialogue == 'n':
        return False
    elif dialogue == "да" or dialogue == 'y':
        return True
    else:
        input_error()


def goto_menu_request(): # Запрос ввода Enter или любого символа для возврата в меню
    put = input()
    if put == '' or put != '':
        return True

# ______________________________________________________________________________


# _______________________ ЧЕКЕРЫ НА КОРРЕТНОСТЬ ВВОДА __________________________

def input_add_check(text): # проверяет правильность ввода, если правильно возвращает то что введено, иначе обращается к функции вывода ошибки
    while True:
           view.formated_prnt(text)
           add_line = input()
           if len(add_line.split(' ; ')) == 2:
               return add_line
           else:
               input_error()


def input_del_check(txt): # проверяет введено ли число, если да проверяет не больше ли оно количества строк (длинны массива) из файла, иначе обращается к функции вывода ошибки
    while True:
        try:
            view.formated_prnt(txt)
            del_line = int(input())
            if 0 < del_line <= len(model.contact_lst()): # больше 0 т.к. в файле нет 0-й строки, будет ошибка
                return del_line
            else:
                input_error()
        except ValueError:
            input_error()


def input_error():
    view.formated_prnt("\n!!! НЕКОРРЕКТНЫЙ ВВОД. ПОВТОРИТЕ. !!!\n")

# __________________________________________________________________________________


# ↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑